// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(cuid())
  email     String?       @unique
  name      String?
  logtoId   String?       @unique
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  sessions  ChatSession[]
  @@index([email])
  @@index([logtoId])
}

model ChatSession {
  id        String     @id @default(cuid())
  title     String     @default("New Chat")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  userId    String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]
  @@index([userId, createdAt])
}

model Message {
  id        String   @id @default(cuid())
  content   String   @db.Text
  role      String
  createdAt DateTime @default(now())

  sessionId String
  session   ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  parentMessageId String?
  parentMessage   Message?  @relation("MessageBranch", fields: [parentMessageId], references: [id], onDelete: SetNull)
  children        Message[] @relation("MessageBranch")

  isEdited        Boolean  @default(false)
  editedAt        DateTime?
  originalContent String?  @db.Text

  @@index([sessionId])
  @@index([parentMessageId])
}